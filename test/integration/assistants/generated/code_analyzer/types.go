// Code generated by aiwf. DO NOT EDIT.

package code_analyzer_sdk

// Issue represents Issue
type Issue struct {
	Message string `json:"message"`
	Suggestion string `json:"suggestion"`
	Severity string `json:"severity"`
	Type string `json:"type"`
	Line int `json:"line"`
}

// Metric represents Metric
type Metric struct {
	Name string `json:"name"`
	Value float64 `json:"value"`
	Unit string `json:"unit"`
}

// CodeAnalysisRequest represents CodeAnalysisRequest
type CodeAnalysisRequest struct {
	Code string `json:"code"`
	Language string `json:"language"`
	AnalysisFocus string `json:"analysis_focus"`
}

// AnalysisResult represents AnalysisResult
type AnalysisResult struct {
	Summary map[string]interface{} `json:"summary"`
	Issues []*Issue `json:"issues"`
	Metrics []*Metric `json:"metrics"`
}

// ============ VALIDATORS ============

// ValidateMetric validates Metric
func ValidateMetric(v *Metric) error {
	// No validation rules
	return nil
}

// ValidateCodeAnalysisRequest validates CodeAnalysisRequest
func ValidateCodeAnalysisRequest(v *CodeAnalysisRequest) error {
	// No validation rules
	return nil
}

// ValidateAnalysisResult validates AnalysisResult
func ValidateAnalysisResult(v *AnalysisResult) error {
	// No validation rules
	return nil
}

// ValidateIssue validates Issue
func ValidateIssue(v *Issue) error {
	// No validation rules
	return nil
}

// ============ TYPE METADATA ============

// TypeMetadata exports type definitions for providers
var TypeMetadata = map[string]interface{}{
	"Issue": map[string]interface{}{
		"type": "object",
		"properties": map[string]interface{}{
			"suggestion": map[string]interface{}{
		"type": "string",
	},
			"severity": map[string]interface{}{
		"type": "string",
		"enum": []string{"critical", "high", "medium", "low"},
	},
			"type": map[string]interface{}{
		"type": "string",
		"enum": []string{"bug", "vulnerability", "performance", "style"},
	},
			"line": map[string]interface{}{
		"type": "integer",
	},
			"message": map[string]interface{}{
		"type": "string",
	},
		},
		"required": []string{"suggestion", "severity", "type", "line", "message"},
		"additionalProperties": false,
	},
	"Metric": map[string]interface{}{
		"type": "object",
		"properties": map[string]interface{}{
			"name": map[string]interface{}{
		"type": "string",
	},
			"value": map[string]interface{}{
		"type": "number",
	},
			"unit": map[string]interface{}{
		"type": "string",
	},
		},
		"required": []string{"name", "value", "unit"},
		"additionalProperties": false,
	},
	"CodeAnalysisRequest": map[string]interface{}{
		"type": "object",
		"properties": map[string]interface{}{
			"code": map[string]interface{}{
		"type": "string",
	},
			"language": map[string]interface{}{
		"type": "string",
		"enum": []string{"python", "javascript", "typescript", "go", "java", "rust"},
	},
			"analysis_focus": map[string]interface{}{
		"type": "string",
		"enum": []string{"security", "performance", "maintainability", "all"},
	},
		},
		"required": []string{"code", "language", "analysis_focus"},
		"additionalProperties": false,
	},
	"AnalysisResult": map[string]interface{}{
		"type": "object",
		"properties": map[string]interface{}{
			"metrics": map[string]interface{}{
		"type": "array",
		"items": map[string]interface{}{
		"type": "object",
		"properties": map[string]interface{}{
			"value": map[string]interface{}{
		"type": "number",
	},
			"unit": map[string]interface{}{
		"type": "string",
	},
			"name": map[string]interface{}{
		"type": "string",
	},
		},
		"required": []string{"value", "unit", "name"},
		"additionalProperties": false,
	},
	},
			"summary": map[string]interface{}{
		"type": "object",
		"properties": map[string]interface{}{
			"critical_count": map[string]interface{}{
		"type": "integer",
	},
			"quality_score": map[string]interface{}{
		"type": "number",
	},
			"total_issues": map[string]interface{}{
		"type": "integer",
	},
		},
		"required": []string{"critical_count", "quality_score", "total_issues"},
		"additionalProperties": false,
	},
			"issues": map[string]interface{}{
		"type": "array",
		"items": map[string]interface{}{
		"type": "object",
		"properties": map[string]interface{}{
			"line": map[string]interface{}{
		"type": "integer",
	},
			"message": map[string]interface{}{
		"type": "string",
	},
			"suggestion": map[string]interface{}{
		"type": "string",
	},
			"severity": map[string]interface{}{
		"type": "string",
		"enum": []string{"critical", "high", "medium", "low"},
	},
			"type": map[string]interface{}{
		"type": "string",
		"enum": []string{"bug", "vulnerability", "performance", "style"},
	},
		},
		"required": []string{"line", "message", "suggestion", "severity", "type"},
		"additionalProperties": false,
	},
	},
		},
		"required": []string{"metrics", "summary", "issues"},
		"additionalProperties": false,
	},
}
