// Code generated by aiwf. DO NOT EDIT.

package blog_pipeline_sdk

import (
	"regexp"
	"time"
)

// User represents User
type User struct {
	Email string `json:"email"`
	Name string `json:"name"`
	Id string `json:"id"`
}

// StyleGuide represents StyleGuide
type StyleGuide struct {
	Tone string `json:"tone"`
	Voice string `json:"voice"`
	Perspective string `json:"perspective"`
}

// Source represents Source
type Source struct {
	Title string `json:"title"`
	Url string `json:"url"`
	Credibility float64 `json:"credibility"`
}

// Section represents Section
type Section struct {
	Id string `json:"id"`
	Title string `json:"title"`
	Points []string `json:"points"`
}

// ResearchInput represents ResearchInput
type ResearchInput struct {
	Topic string `json:"topic"`
	Depth string `json:"depth"`
}

// OutlineInput represents OutlineInput
type OutlineInput struct {
	ResearchData *ResearchOutput `json:"research_data"`
	Topic string `json:"topic"`
}

// EditInput represents EditInput
type EditInput struct {
	Draft *Draft `json:"draft"`
}

// BlogRequest represents BlogRequest
type BlogRequest struct {
	WordCountTarget int `json:"word_count_target"`
	StyleGuide *StyleGuide `json:"style_guide"`
	Topic string `json:"topic"`
	Keywords []string `json:"keywords"`
	TargetAudience string `json:"target_audience"`
}

// ResearchOutput represents ResearchOutput
type ResearchOutput struct {
	Sources []*Source `json:"sources"`
	Summary string `json:"summary"`
	KeyPoints []string `json:"key_points"`
}

// PostMetadata represents PostMetadata
type PostMetadata struct {
	Author *User `json:"author"`
	PublishedAt time.Time `json:"published_at"`
	Tags []string `json:"tags"`
	WordCount int `json:"word_count"`
	ReadingTimeMinutes int `json:"reading_time_minutes"`
}

// BlogOutline represents BlogOutline
type BlogOutline struct {
	Title string `json:"title"`
	Sections []*Section `json:"sections"`
	EstimatedWords int `json:"estimated_words"`
}

// Draft represents Draft
type Draft struct {
	Title string `json:"title"`
	Content string `json:"content"`
	WordCount int `json:"word_count"`
}

// WritingInput represents WritingInput
type WritingInput struct {
	Outline *BlogOutline `json:"outline"`
	StyleGuide *StyleGuide `json:"style_guide"`
}

// PublishedPost represents PublishedPost
type PublishedPost struct {
	Excerpt string `json:"excerpt"`
	Metadata *PostMetadata `json:"metadata"`
	Title string `json:"title"`
	Content string `json:"content"`
}

// ============ VALIDATORS ============

// ValidateWritingInput validates WritingInput
func ValidateWritingInput(v *WritingInput) error {
	// No validation rules
	return nil
}

// ValidatePublishedPost validates PublishedPost
func ValidatePublishedPost(v *PublishedPost) error {
	// No validation rules
	return nil
}

// ValidateUser validates User
func ValidateUser(v *User) error {
	if !isValidEmail(v.Email) {
		return fmt.Errorf("email must be a valid email")
	}
	return nil
}

// ValidateStyleGuide validates StyleGuide
func ValidateStyleGuide(v *StyleGuide) error {
	// No validation rules
	return nil
}

// ValidateSource validates Source
func ValidateSource(v *Source) error {
	// No validation rules
	return nil
}

// ValidateSection validates Section
func ValidateSection(v *Section) error {
	// No validation rules
	return nil
}

// ValidateResearchInput validates ResearchInput
func ValidateResearchInput(v *ResearchInput) error {
	// No validation rules
	return nil
}

// ValidateOutlineInput validates OutlineInput
func ValidateOutlineInput(v *OutlineInput) error {
	// No validation rules
	return nil
}

// ValidateEditInput validates EditInput
func ValidateEditInput(v *EditInput) error {
	// No validation rules
	return nil
}

// ValidateBlogRequest validates BlogRequest
func ValidateBlogRequest(v *BlogRequest) error {
	// No validation rules
	return nil
}

// ValidateResearchOutput validates ResearchOutput
func ValidateResearchOutput(v *ResearchOutput) error {
	// No validation rules
	return nil
}

// ValidatePostMetadata validates PostMetadata
func ValidatePostMetadata(v *PostMetadata) error {
	// No validation rules
	return nil
}

// ValidateBlogOutline validates BlogOutline
func ValidateBlogOutline(v *BlogOutline) error {
	// No validation rules
	return nil
}

// ValidateDraft validates Draft
func ValidateDraft(v *Draft) error {
	// No validation rules
	return nil
}

// ============ TYPE METADATA ============

// TypeMetadata exports type definitions for providers
var TypeMetadata = map[string]interface{}{
	"PostMetadata": nil, // TODO: export actual TypeDef
	"BlogOutline": nil, // TODO: export actual TypeDef
	"Draft": nil, // TODO: export actual TypeDef
	"WritingInput": nil, // TODO: export actual TypeDef
	"PublishedPost": nil, // TODO: export actual TypeDef
	"User": nil, // TODO: export actual TypeDef
	"StyleGuide": nil, // TODO: export actual TypeDef
	"Source": nil, // TODO: export actual TypeDef
	"Section": nil, // TODO: export actual TypeDef
	"ResearchInput": nil, // TODO: export actual TypeDef
	"OutlineInput": nil, // TODO: export actual TypeDef
	"EditInput": nil, // TODO: export actual TypeDef
	"BlogRequest": nil, // TODO: export actual TypeDef
	"ResearchOutput": nil, // TODO: export actual TypeDef
}
