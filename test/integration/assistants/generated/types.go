// Code generated by aiwf. DO NOT EDIT.

package data_extractor_sdk

import (
	"time"
)

// Entity represents Entity
type Entity struct {
	Type string `json:"type"`
	Value string `json:"value"`
	Confidence float64 `json:"confidence"`
}

// Relationship represents Relationship
type Relationship struct {
	Subject string `json:"subject"`
	Predicate string `json:"predicate"`
	Object string `json:"object"`
}

// ExtractRequest represents ExtractRequest
type ExtractRequest struct {
	Text string `json:"text"`
	ExtractionMode string `json:"extraction_mode"`
}

// ExtractedData represents ExtractedData
type ExtractedData struct {
	Entities []*Entity `json:"entities"`
	Relationships []*Relationship `json:"relationships"`
	Metadata map[string]interface{} `json:"metadata"`
}

// ============ VALIDATORS ============

// ValidateRelationship validates Relationship
func ValidateRelationship(v *Relationship) error {
	// No validation rules
	return nil
}

// ValidateExtractRequest validates ExtractRequest
func ValidateExtractRequest(v *ExtractRequest) error {
	// No validation rules
	return nil
}

// ValidateExtractedData validates ExtractedData
func ValidateExtractedData(v *ExtractedData) error {
	// No validation rules
	return nil
}

// ValidateEntity validates Entity
func ValidateEntity(v *Entity) error {
	// No validation rules
	return nil
}

// ============ TYPE METADATA ============

// TypeMetadata exports type definitions for providers
var TypeMetadata = map[string]interface{}{
	"Entity": nil, // TODO: export actual TypeDef
	"Relationship": nil, // TODO: export actual TypeDef
	"ExtractRequest": nil, // TODO: export actual TypeDef
	"ExtractedData": nil, // TODO: export actual TypeDef
}
