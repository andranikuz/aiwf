// Code generated by aiwf. DO NOT EDIT.

package translator_sdk

// TranslationResult represents TranslationResult
type TranslationResult struct {
	Notes []*TranslationNote `json:"notes"`
	TranslatedText string `json:"translated_text"`
	ConfidenceScore float64 `json:"confidence_score"`
	Alternatives []*Alternative `json:"alternatives"`
}

// Alternative represents Alternative
type Alternative struct {
	Text string `json:"text"`
	Context string `json:"context"`
	PreferenceScore float64 `json:"preference_score"`
}

// TranslationNote represents TranslationNote
type TranslationNote struct {
	Type string `json:"type"`
	OriginalPhrase string `json:"original_phrase"`
	TranslatedPhrase string `json:"translated_phrase"`
	Explanation string `json:"explanation"`
}

// TranslationRequest represents TranslationRequest
type TranslationRequest struct {
	Text string `json:"text"`
	SourceLanguage string `json:"source_language"`
	TargetLanguage string `json:"target_language"`
	Domain string `json:"domain"`
	PreserveFormatting bool `json:"preserve_formatting"`
}

// ============ VALIDATORS ============

// ValidateAlternative validates Alternative
func ValidateAlternative(v *Alternative) error {
	// No validation rules
	return nil
}

// ValidateTranslationNote validates TranslationNote
func ValidateTranslationNote(v *TranslationNote) error {
	// No validation rules
	return nil
}

// ValidateTranslationRequest validates TranslationRequest
func ValidateTranslationRequest(v *TranslationRequest) error {
	// No validation rules
	return nil
}

// ValidateTranslationResult validates TranslationResult
func ValidateTranslationResult(v *TranslationResult) error {
	// No validation rules
	return nil
}

// ============ TYPE METADATA ============

// TypeMetadata exports type definitions for providers
var TypeMetadata = map[string]interface{}{
	"TranslationResult": nil, // TODO: export actual TypeDef
	"Alternative": nil, // TODO: export actual TypeDef
	"TranslationNote": nil, // TODO: export actual TypeDef
	"TranslationRequest": nil, // TODO: export actual TypeDef
}
