// Code generated by aiwf. DO NOT EDIT.

package customer_support_sdk

import (
	"regexp"
	"time"
)

// Message represents Message
type Message struct {
	Content string `json:"content"`
	Timestamp time.Time `json:"timestamp"`
	Id string `json:"id"`
	SenderType string `json:"sender_type"`
}

// Attachment represents Attachment
type Attachment struct {
	SizeBytes int `json:"size_bytes"`
	Url string `json:"url"`
	Filename string `json:"filename"`
	MimeType string `json:"mime_type"`
}

// ConversationContext represents ConversationContext
type ConversationContext struct {
	SessionId string `json:"session_id"`
	TicketId string `json:"ticket_id"`
	PreviousMessages []*Message `json:"previous_messages"`
	CustomerInfo *Customer `json:"customer_info"`
}

// Action represents Action
type Action struct {
	Type string `json:"type"`
	Label string `json:"label"`
	Data map[string]interface{} `json:"data"`
}

// SupportMessage represents SupportMessage
type SupportMessage struct {
	CustomerId string `json:"customer_id"`
	Message string `json:"message"`
	Context *ConversationContext `json:"context"`
	Attachments []*Attachment `json:"attachments"`
}

// SupportResponse represents SupportResponse
type SupportResponse struct {
	Message string `json:"message"`
	Actions []*Action `json:"actions"`
	Escalate bool `json:"escalate"`
	ResolutionStatus string `json:"resolution_status"`
}

// Customer represents Customer
type Customer struct {
	Id string `json:"id"`
	Name string `json:"name"`
	Email string `json:"email"`
	SubscriptionTier string `json:"subscription_tier"`
	AccountCreated time.Time `json:"account_created"`
}

// ============ VALIDATORS ============

// ValidateSupportResponse validates SupportResponse
func ValidateSupportResponse(v *SupportResponse) error {
	// No validation rules
	return nil
}

// ValidateCustomer validates Customer
func ValidateCustomer(v *Customer) error {
	if !isValidEmail(v.Email) {
		return fmt.Errorf("email must be a valid email")
	}
	return nil
}

// ValidateMessage validates Message
func ValidateMessage(v *Message) error {
	// No validation rules
	return nil
}

// ValidateAttachment validates Attachment
func ValidateAttachment(v *Attachment) error {
	// No validation rules
	return nil
}

// ValidateConversationContext validates ConversationContext
func ValidateConversationContext(v *ConversationContext) error {
	// No validation rules
	return nil
}

// ValidateAction validates Action
func ValidateAction(v *Action) error {
	// No validation rules
	return nil
}

// ValidateSupportMessage validates SupportMessage
func ValidateSupportMessage(v *SupportMessage) error {
	// No validation rules
	return nil
}

// ============ TYPE METADATA ============

// TypeMetadata exports type definitions for providers
var TypeMetadata = map[string]interface{}{
	"Message": nil, // TODO: export actual TypeDef
	"Attachment": nil, // TODO: export actual TypeDef
	"ConversationContext": nil, // TODO: export actual TypeDef
	"Action": nil, // TODO: export actual TypeDef
	"SupportMessage": nil, // TODO: export actual TypeDef
	"SupportResponse": nil, // TODO: export actual TypeDef
	"Customer": nil, // TODO: export actual TypeDef
}
