// Code generated by aiwf. DO NOT EDIT.

package aiwfgen

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/andranikuz/aiwf/runtime/go/aiwf"
)

// Agents contains all generated agents
type Agents struct {
	DataExtractor *DataExtractorAgent
}

// DataExtractorAgent represents the data_extractor agent
type DataExtractorAgent struct {
	aiwf.AgentBase
}

// NewDataExtractorAgent creates a new data_extractor agent
func NewDataExtractorAgent(client aiwf.ModelClient) *DataExtractorAgent {
	return &DataExtractorAgent{
		AgentBase: aiwf.AgentBase{
			Config: aiwf.AgentConfig{
				Name:           "data_extractor",
				Model:          "gpt-4o-mini",
				SystemPrompt:   `Extract entities from text`,
				InputTypeName:  "UserRequest",
				OutputTypeName: "ExtractedData",
				MaxTokens:      2000,
				Temperature:    0.7,
			},
			Client: client,
		},
	}
}

// Run executes the data_extractor agent
func (a *DataExtractorAgent) Run(ctx context.Context, input UserRequest) (*ExtractedData, *aiwf.Trace, error) {
	// Validate input
	if err := ValidateUserRequest(&input); err != nil {
		return nil, nil, fmt.Errorf("validation failed: %w", err)
	}

	// Call model
	result, trace, err := a.CallModel(ctx, input, nil)
	if err != nil {
		return nil, trace, err
	}

	// Parse response
	var output ExtractedData
	if err := json.Unmarshal(result, &output); err != nil {
		return nil, trace, fmt.Errorf("failed to parse response: %w", err)
	}

	return &output, trace, nil
}


